<?php

require_once dirname(__FILE__) . '/../bloom.php';

/**
 * Test class for Bloom.
 * Generated by PHPUnit on 2011-12-31 at 10:29:57.
 */
class BloomTest extends PHPUnit_Framework_TestCase {
   public function testBF() {
      $bloom = new Bloom(20);
      for($i=0; $i<20; $i++) {
         $bloom->add($i);
      }
      for($i=0; $i<20; $i++) {
         // bloom filters never have false negatives.
         $this->assertTrue($bloom->has($i));
      }

      $falsePositiveCount = 0;
      for($i=20; $i<1020; $i++) {
         if($bloom->has($i)) {
            $falsePositiveCount++;
         }
      }

      $fpRatio = $falsePositiveCount / 1000;
      $this->assertFalse($fpRatio > 0.06, "Too many false positives for this test. Something has gone wrong.");
   }

   public function testSmallEdgeCase() {
      $bloom = new Bloom(10, 1, "crc32");
      $bloom->add(array("test", "one", "two", "three"));
      $this->assertFalse($bloom->has("five"));
      $this->assertTrue($bloom->has("one"));

      // there'll be a high number of false positives here.
      $falsePositiveCount = 0;
      foreach(range(0,100) as $i) {
         if($bloom->has($i)) {
            $falsePositiveCount++;
         }
      }
      $fpRatio = $falsePositiveCount / 100;

      $this->assertFalse($fpRatio < 0.25, "Expected more false positives in small edge case test.");
   }

   public function testSave() {
      $bloom = new Bloom(10);
      $bloom->add(range(40,50));
      $bloom_saved = $bloom->save();
      $this->assertTrue($bloom->has(range(40,50)));
      $this->assertFalse($bloom->has(range(10,20)));

      $new_bloom = new Bloom();
      $new_bloom->load($bloom_saved);
      $this->assertTrue($new_bloom->has(range(40,50)));
      $this->assertFalse($new_bloom->has(range(10,20)));
   }

   public function testArrayInputs() {
      $bloom = new Bloom(20);
      $input = range(0, 20);
      $bloom->add($input);

      $this->assertTrue($bloom->has($input));
      $input = range(10,30);
      $this->assertFalse($bloom->has($input));
   }
}

?>
